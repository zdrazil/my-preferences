myPaths=(
    "$HOME/bin"
    "/opt/homebrew/bin"
    "/usr/local/bin"
    "$HOME/.local/bin"
    "$HOME/.emacs.d/bin"
    "$HOME/.local/homebrew/bin"
    "/Applications/MacVim.app/Contents/bin"
    "$HOME/.fzf/bin"
    "$HOME/.local/npm-tools/node_modules/.bin"
    "/opt/local/bin"
    "/opt/local/sbin"
)

for myPath in "${myPaths[@]}"; do
    if [ -d "$myPath" ]; then
        PATH="$myPath:$PATH"
    fi
done

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

manPaths=(
    "/opt/homebrew/share/man"
    "/opt/local/share/man"
    "/usr/local/share/man"
    "$HOME/.local/homebrew/share/man"
)

for myMan in "${manPaths[@]}"; do
    if [ -d "$myMan" ]; then
        MANPATH="$myMan:$MANPATH"
    fi
done

# Remove duplicate PATH because we can have them already sourced in .zprofile
# It's done because of macOS behavior where files are sourced differently than on Linux.
# By doing this we can use same .zprofile and .zshrc on both systems.
get_var() {
    eval 'printf "%s\n" "${'"$1"'}"'
}
set_var() {
    eval "$1=\"\$2\""
}
dedup_pathvar() {
    pathvar_name="$1"
    pathvar_value="$(get_var "$pathvar_name")"
    deduped_path="$(perl -e 'print join(":",grep { not $seen{$_}++ } split(/:/, $ARGV[0]))' "$pathvar_value")"
    set_var "$pathvar_name" "$deduped_path"
}
dedup_pathvar PATH
dedup_pathvar MANPATH
