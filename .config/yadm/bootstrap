#!/usr/bin/env bash
# shellcheck enable=all

set -eu
trap "kill 0" EXIT

cd "${HOME}" || exit

system_type=$(uname -s)
my_config_home="${HOME}/.config"
my_bin_home="${HOME}/.local/bin"

mkdir -p "${my_config_home}"
mkdir -p "${my_bin_home}"

install_homebrew() {
	if ! command -v brew >/dev/null 2>&1; then
		echo "Installing homebrew"
		brew_script="$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		/bin/bash -c "${brew_script}"
	else
		echo "Homebrew already installed. Skipping installation..."
	fi

	if [[ "${system_type}" = "Darwin" ]]; then
		echo "Installing core homebrew packages..."
		brew install bash coreutils findutils gnu-sed tmux yadm zsh tmux
		# shellcheck disable=SC1091
		source "${HOME}/.config/yadm/macos-configuration"

		echo "Installing rest of the homebrew packages..."
		if [[ "${system_type}" = "Darwin" ]]; then
			echo "Updating homebrew bundle"
			brew bundle --verbose --file "${my_config_home}/packages/Brewfile"
		fi
	fi
	if [[ "${system_type}" = "Linux" ]]; then
		echo "Installing basic apt packages..."
		sudo apt update
		sudo apt install build-essential procps curl file git dirmngr gpg gawk
		echo "Updating homebrew bundle"
		brew bundle --verbose --file "${my_config_home}/packages/LinuxBrewfile"
		echo "Installing apt packages"
		sudo apt install xclip vim-gtk3 nodejs npm
		sudo apt-get install $(cat "${my_config_home}/packages/ubuntu-packages" | sed '/^#/d')
		sudo apt-get clean

		if [[ -n "${XDG_SESSION_TYPE}" ]]; then
			echo "Installing GUI packages..."
			sudo apt-get install $(cat "${my_config_home}/packages/ubuntu-gui-packages" | sed '/^#/d')
		fi
	fi
}

install_scripts() {
	echo "Installing scripts..."

	{
		echo "Installing cht.sh..."
		curl "https://cht.sh/:cht.sh" >"${my_bin_home}/chtsh"
		chmod +x "${my_bin_home}/chtsh"
	} &

	{
		echo "Installing theme.sh..."
		curl -Lo "${my_bin_home}/theme-sh" 'https://raw.githubusercontent.com/lemnos/theme.sh/master/bin/theme.sh'
		chmod +x "${my_bin_home}/theme-sh"
	} &

	{
		echo "Installing fzf..."
		rm -rf "${HOME}/.fzf"
		git clone --depth 1 https://github.com/junegunn/fzf.git "${HOME}/.fzf"
		"${HOME}/.fzf/install" --key-bindings --completion --no-update-rc
	} &

	{
		echo "Installing tpm..."
		rm -rf "${HOME}/.tmux/plugins/tpm"
		git clone https://github.com/tmux-plugins/tpm "${HOME}/.tmux/plugins/tpm"
		"${HOME}/.tmux/plugins/tpm/scripts/install_plugins.sh"
	} &

	{
		echo "Installing zgen..."
		rm -rf "${HOME}/.zgen"
		git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"
	} &

	install_asdf() {
		echo "Installing asdf..."
		rm -rf "${HOME}/.asdf"
		git clone https://github.com/asdf-vm/asdf.git "${HOME}/.asdf" --branch v0.10.0
		# shellcheck disable=SC1091
		source "${HOME}/.asdf/asdf.sh"
		asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
		asdf plugin-add python
		asdf plugin-add yarn
		asdf plugin-add ruby
		asdf plugin-add haskell
		asdf install
	}

	install_asdf &

	wait
}

install_vimPlug() {
	echo "Installing vim-plug..."
	curl -fLo "${HOME}/.vim/autoload/plug.vim" --create-dirs \
		https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	vim -es -u .vimrc -i NONE -c "PlugInstall" -c "qa"
}

install_homebrew &
install_scripts &
install_vimPlug &

# Change to the new shell
# echo "Set zsh as default shell"
# sudo sh -c "echo "$(brew --prefix)/bin/zsh" >>/etc/shells"
# chsh -s $(brew --prefix)/bin/bash

wait
