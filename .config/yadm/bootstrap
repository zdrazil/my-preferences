#!/usr/bin/env bash
# shellcheck enable=all

set -eu
trap "kill 0" EXIT

command_help() {
	USAGE="
USAGE:
bootstrap [OPTIONS]

OPTIONS:
-h	Show this message.
-r	Reinstall all packages."
	echo "${USAGE}"
}

system_type=$(uname -s)
my_config_home="${HOME}/.config"
my_bin_home="${HOME}/.local/bin"
should_reinstall=false

while getopts ":hr" option; do
	case ${option} in
	h)
		command_help
		exit
		;;
	r)
		should_reinstall=true
		;;
	*)
		echo "Invalid option: -${OPTARG}" >&2
		command_help
		exit 1
		;;
	esac
done

cd "${HOME}" || exit

mkdir -p "${my_config_home}"
mkdir -p "${my_bin_home}"

install_homebrew() {
	if ! command -v brew >/dev/null 2>&1; then
		echo "Installing homebrew"
		brew_script="$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		/bin/bash -c "${brew_script}"
	else
		echo "Homebrew already installed. Skipping installation..."
	fi

	if [[ "${system_type}" = "Darwin" ]]; then
		echo "Installing core homebrew packages..."
		brew install bash coreutils findutils gnu-sed tmux yadm zsh tmux
		# shellcheck disable=SC1091
		source "${HOME}/.config/yadm/macos-configuration"

		echo "Installing rest of the homebrew packages..."
		if [[ "${system_type}" = "Darwin" ]]; then
			echo "Updating homebrew bundle"
			brew bundle --verbose --file "${my_config_home}/packages/Brewfile"
		fi
	fi
	if [[ "${system_type}" = "Linux" ]]; then
		echo "Installing basic apt packages..."
		sudo apt update
		sudo apt install build-essential procps curl file git dirmngr gpg gawk
		echo "Updating homebrew bundle"
		brew bundle --verbose --file "${my_config_home}/packages/LinuxBrewfile"
		echo "Installing apt packages"
		sudo apt install xclip vim-gtk3 nodejs npm
		sudo apt-get install $(cat "${my_config_home}/packages/ubuntu-packages" | sed '/^#/d')
		sudo apt-get clean

		if [[ -n "${XDG_SESSION_TYPE}" ]]; then
			echo "Installing GUI packages..."
			sudo apt-get install $(cat "${my_config_home}/packages/ubuntu-gui-packages" | sed '/^#/d')
		fi
	fi
}

install_scripts() {
	echo "Installing scripts..."

	{
		if [[ ! -f "${my_bin_home}/chtsh" ]] || [[ ${should_reinstall} == true ]]; then
			echo "Installing cht.sh..."
			curl "https://cht.sh/:cht.sh" >"${my_bin_home}/chtsh"
			chmod +x "${my_bin_home}/chtsh"
		else
			echo "cht.sh already installed. Skipping installation..."
		fi
	} &

	{
		if [[ -f "${my_bin_home}/theme.sh" ]] || [[ ${should_reinstall} == true ]]; then
			echo "Installing theme.sh..."
			curl -Lo "${my_bin_home}/theme-sh" 'https://raw.githubusercontent.com/lemnos/theme.sh/master/bin/theme.sh'
			chmod +x "${my_bin_home}/theme-sh"
		else
			echo "theme.sh already installed. Skipping installation..."
		fi
	} &

	{
		if ! command -v fzf >/dev/null 2>&1; then
			echo "Installing fzf..."
			rm -rf "${HOME}/.fzf"
			git clone --depth 1 https://github.com/junegunn/fzf.git "${HOME}/.fzf"
			"${HOME}/.fzf/install" --key-bindings --completion --no-update-rc
		else
			echo "fzf already installed. Skipping installation..."
		fi
	} &

	{
		if [[ ! -d "${HOME}/.tmux/plugins/tpm" ]] || [[ ${should_reinstall} == true ]]; then
			echo "Installing tpm..."
			rm -rf "${HOME}/.tmux/plugins/tpm"
			git clone https://github.com/tmux-plugins/tpm "${HOME}/.tmux/plugins/tpm"
			"${HOME}/.tmux/plugins/tpm/scripts/install_plugins.sh"
		else
			echo "tpm already installed. Skipping installation..."
		fi
	} &

	{
		if [[ ! -d "${HOME}/.zgen" ]] || [[ ${should_reinstall} == true ]]; then
			echo "Installing zgen..."
			rm -rf "${HOME}/.zgen"
			git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"
		else
			echo "zgen already installed. Skipping installation..."
		fi
	} &

	install_asdf() {

		if [[ ! -d "${HOME}/.asdf" ]] || [[ ${should_reinstall} == true ]]; then
			echo "Installing asdf..."
			rm -rf "${HOME}/.asdf"
			git clone https://github.com/asdf-vm/asdf.git "${HOME}/.asdf" --branch v0.10.0
			# shellcheck disable=SC1091
			source "${HOME}/.asdf/asdf.sh"
			{
				asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
				asdf plugin-add python
				asdf plugin-add yarn
				asdf plugin-add ruby
				asdf plugin-add haskell
			} 2>/dev/null
			asdf install
		else
			echo "asdf already installed. Skipping installation..."
		fi
	}

	install_asdf &

	wait
}

install_vim_plug() {
	if [[ ! -f "${HOME}/.vim/autoload/plug.vim" ]] || [[ ${should_reinstall} == true ]]; then
		echo "Installing vim-plug..."
		curl -fLo "${HOME}/.vim/autoload/plug.vim" --create-dirs \
			https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
		vim -es -u .vimrc -i NONE -c "PlugInstall" -c "qa"
	else
		echo "vim-plug already installed. Skipping installation..."
	fi
}

install_homebrew &
install_scripts &
install_vim_plug &

wait

# shellcheck disable=SC2016
echo '
Run this manually to set brew zsh as default:
sudo sh -c "echo "$(brew --prefix)/bin/zsh" >>/etc/shells"
chsh -s $(brew --prefix)/bin/bash'
