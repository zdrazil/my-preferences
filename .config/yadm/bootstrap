#!/usr/bin/env bash

cd "$HOME" || exit

echo "Init submodules"
yadm submodule update --recursive --init

system_type=$(uname -s)
MY_CONFIG_HOME="$HOME/.config"
MY_BIN_HOME="$HOME/.local/bin"

mkdir -p "$MY_CONFIG_HOME"

if ! command -v brew >/dev/null 2>&1; then
	echo "Installing homebrew"
	/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

if [ "$system_type" = "Darwin" ]; then
	# install homebrew if it's missing
	echo "Updating homebrew bundle"
	brew bundle --verbose --file "$MY_CONFIG_HOME/packages/Brewfile"
fi

if [ "$system_type" = "Linux" ]; then
	echo "Installing basic apt packages"
	sudo apt update
	sudo apt install build-essential procps curl file git dirmngr gpg gawk
	echo "Updating homebrew bundle"
	brew bundle --verbose --file "$MY_CONFIG_HOME/packages/LinuxBrewfile"
	echo "Installing apt packages"
	sudo apt install xclip vim-gtk3 nodejs npm
	sudo apt-get install $(cat "$MY_CONFIG_HOME/packages/ubuntu-packages" | sed '/^#/d')
	sudo apt-get clean

	if [ -n "$XDG_SESSION_TYPE" ]; then
		echo "Installing GUI packages..."
		sudo apt-get install $(cat "$MY_CONFIG_HOME/packages/ubuntu-gui-packages" | sed '/^#/d')
	fi
fi

echo "packages"
curl https://cht.sh/:cht.sh >"$MY_BIN_HOME/chtsh"
chmod +x "$MY_BIN_HOME/chtsh"

curl -Lo "$MY_BIN_HOME/theme-sh" 'https://raw.githubusercontent.com/lemnos/theme.sh/master/bin/theme.sh' && chmod +x "$MY_BIN_HOME/theme-sh"

git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

echo "tpm"
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

echo "zgen"
git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen"

echo "asdf"
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
asdf plugin-add python
asdf plugin-add yarn
asdf install

echo "Vim plug"
curl -fLo "$HOME/.vim/autoload/plug.vim" --create-dirs \
	https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
vim -es -u .vimrc -i NONE -c "PlugInstall" -c "qa"
