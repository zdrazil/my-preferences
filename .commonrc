# Source config files that are not to be public (API tokens etc.) 
if [ -r ~/.not-public ]
then
    source ~/.not-public
fi

if  [ -f /usr/local/etc/profile.d/autojump.sh ]; then
    . /usr/local/etc/profile.d/autojump.sh
fi

if [[ $OSTYPE == "linux-gnu" ]] && [[ "$(< /proc/sys/kernel/osrelease)" == *Microsoft ]] && [ -t 1 ]; then  
    eval $(keychain --quiet --agents ssh --attempts 3 --eval id_rsa)
    export BROWSER='wslview'
fi

#-------------------- ALIASES ------------------------

function npm-do { (PATH=$(npm bin):$PATH; eval $@;) }

alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'

function cdl {
    builtin cd "$@" && ls
}

function vimwiki {
    cd ~/vimwiki && vim index.md
}

function my-js-playground {
    cd ~/projects/playgrounds/js/src && vim index.js
}

codi() {
  local syntax="${1:-python}"
  shift
  vim -c \
    "let g:startify_disable_at_vimenter = 1 |\
    set bt=nofile ls=0 noru nonu nornu |\
    hi ColorColumn ctermbg=NONE |\
    hi VertSplit ctermbg=NONE |\
    hi NonText ctermfg=0 |\
    Codi $syntax" "$@"
}

# Mac Specific Aliases
if [[ $OSTYPE == darwin* ]]; then
    alias mac-showFiles="defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app"
    alias mac-hideFiles="defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app"
fi

export NVM_DIR="$HOME/.nvm"		
 [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use # This loads nvm

# ssh-agent configuration
if uname -r |grep -q 'Microsoft' ; then
    env=~/.ssh/agent.env

    agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

    agent_start () {
        (umask 077; ssh-agent >| "$env")
        . "$env" >| /dev/null ; }

    agent_load_env

    agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

    if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
        agent_start
        ssh-add
    elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
        ssh-add
    fi

    unset env
fi
